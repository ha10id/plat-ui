@use '../../styles/shared-mixins/button-sizes';
@use '../../styles/shared-mixins/button-appearances';
@use '../../styles/shared-mixins/typography';

.Button {
  font-family: var(--family-base), serif;
  background-color: var(--PlatUi-Button_background);
  color: var(--PlatUi-Button_foreground);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
  border: 0;
  text-decoration: none;
}

// [State] Loading
.Button_loading {
  cursor: wait;

  :where(.Button__iconBefore, .Button__content, .Button__indicator, .Button__iconAfter) {
    visibility: hidden;
  }
}

// [State] Disabled
.Button_disabled {
  cursor: not-allowed;
}

// [State] Stretched
.Button_stretched {
  width: 100%;
}

// [Property] Effect on :active
.Button_activeMode {

  &_ripple {
    --Ripple_backgroundColor: var(--PlatUi-Button_background-active);
  }

  &_highlight {

    &:active {
      background-color: var(--PlatUi-Button_background-active);
      color: var(--PlatUi-Button_foreground-active, var(--PlatUi-Button_foreground));
    }
  }
}

// [Properties] Sizes and spacings
.Button_size_small {
  @include button-sizes.buttonSmallSize;

  &:where(.Button_mode_primary, .Button_mode_secondary, .Button_mode_tertiary) {
    padding: 0 var(--spacing-size-xl);
  }
}
.Button_size_medium {
  @include button-sizes.buttonMediumSize;

  &:where(.Button_mode_primary, .Button_mode_secondary, .Button_mode_tertiary) {
    padding: 0 var(--spacing-size-xl);
  }
}
.Button_size_large {
  @include button-sizes.buttonLargeSize;

  &:where(.Button_mode_primary, .Button_mode_secondary, .Button_mode_tertiary) {
    padding: 0 var(--spacing-size3xl);
  }
}
.Button_mode_link {
  padding: 0;
}

// [Properties] Themed appearances
.Button_appearance_themed:where(.Button_mode_primary) {
  @include button-appearances.buttonPrimaryThemed('Button', true)
}
.Button_appearance_themed:where(.Button_mode_secondary) {
  @include button-appearances.buttonSecondaryThemed('Button', true)
}
.Button_appearance_themed:where(.Button_mode_tertiary) {
  @include button-appearances.buttonTertiaryThemed('Button', true);
}
.Button_appearance_themed:where(.Button_mode_link) {
  @include button-appearances.buttonLinkThemed('Button', true);
}

// [Properties] Negative appearances
.Button_appearance_negative:where(.Button_mode_primary) {
  @include button-appearances.buttonPrimaryNegative('Button', true)
}
.Button_appearance_negative:where(.Button_mode_secondary) {
  @include button-appearances.buttonSecondaryNegative('Button', true)
}
.Button_appearance_negative:where(.Button_mode_tertiary) {
  @include button-appearances.buttonTertiaryNegative('Button', true);
}
.Button_appearance_negative:where(.Button_mode_link) {
  @include button-appearances.buttonLinkNegative('Button', true);
}

// [Properties] Neutral appearances
.Button_appearance_neutral:where(.Button_mode_primary) {
  @include button-appearances.buttonPrimaryNeutral('Button', true)
}
.Button_appearance_neutral:where(.Button_mode_secondary) {
  @include button-appearances.buttonSecondaryNeutral('Button', true)
}
.Button_appearance_neutral:where(.Button_mode_tertiary) {
  @include button-appearances.buttonTertiaryNeutral('Button', true);
}
.Button_appearance_neutral:where(.Button_mode_link) {
  @include button-appearances.buttonLinkNeutral('Button', true);
}

// [Properties] Neutral themed appearances
.Button_appearance_neutral-themed:where(.Button_mode_primary) {
  @include button-appearances.buttonPrimaryNeutralThemed('Button', true)
}
.Button_appearance_neutral-themed:where(.Button_mode_secondary) {
  @include button-appearances.buttonSecondaryNeutralThemed('Button', true)
}
.Button_appearance_neutral-themed:where(.Button_mode_tertiary) {
  @include button-appearances.buttonTertiaryNeutralThemed('Button', true);
}
.Button_appearance_neutral-themed:where(.Button_mode_link) {
  @include button-appearances.buttonLinkNeutralThemed('Button', true);
}

// [Properties] Contrast static appearances
.Button_appearance_contrast-static:where(.Button_mode_primary) {
  @include button-appearances.buttonPrimaryContrastStatic('Button', true)
}
.Button_appearance_contrast-static:where(.Button_mode_secondary) {
  @include button-appearances.buttonSecondaryContrastStatic('Button', true)
}
.Button_appearance_contrast-static:where(.Button_mode_tertiary) {
  @include button-appearances.buttonTertiaryContrastStatic('Button', true);
}
.Button_appearance_contrast-static:where(.Button_mode_link) {
  @include button-appearances.buttonLinkContrastStatic('Button', true);
}

// [Parts] Content
.Button__content {
  position: relative;
  z-index: 1;

  :where(.Button_size_small) & {
    @include typography.actionSmall;
  }

  :where(.Button_size_medium) & {
    @include typography.actionMedium;
  }

  :where(.Button_size_large) & {
    @include typography.actionLarge;
  }
}

// [Parts] Spinner container
.Button__spinnerContainer {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

// [Parts] Icon before
.Button__iconBefore {
  position: relative;
  z-index: 1;
  display: flex;

  :where(.Button_size_small) & {
    margin-right: var(--spacing-size-xs);
  }

  :where(.Button_size_medium) & {
    margin-right: var(--spacing-size-s);
  }

  :where(.Button_size_large) & {
    margin-right: var(--spacing-size-s);
  }
}

// [Parts] Icon after
.Button__iconAfter {
  position: relative;
  z-index: 1;
  display: flex;

  :where(.Button_size_small) & {
    margin-left: var(--spacing-size-xs);
  }

  :where(.Button_size_medium) & {
    margin-left: var(--spacing-size-s);
  }

  :where(.Button_size_large) & {
    margin-left: var(--spacing-size-s);
  }
}

// [Parts] Indicator
.Button__indicator {
  position: relative;
  z-index: 1;

  :where(.Button_size_small) & {
    margin-left: var(--spacing-size-xs);
  }

  :where(.Button_size_medium) & {
    margin-left: var(--spacing-size-s);
  }

  :where(.Button_size_large) & {
    margin-left: var(--spacing-size-s);
  }
}

// [Parts] Ripple
.Button__ripple {
  position: absolute;
  inset: 0;
  pointer-events: none;
}
